name: Test Extension Build

on:
  push:
    branches: [ main, claude/** ]
    paths:
      - 'vscode-extension/**'
      - 'scripts/build-extension.sh'
      - '.github/workflows/test-extension-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'vscode-extension/**'

jobs:
  validate-config:
    name: Validate Extension Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Validate extension package.json
        run: |
          cd vscode-extension
          node -e "JSON.parse(require('fs').readFileSync('package.json'))"
          echo "✓ Extension package.json is valid"

      - name: Validate webview package.json
        run: |
          cd vscode-extension/webview
          node -e "JSON.parse(require('fs').readFileSync('package.json'))"
          echo "✓ Webview package.json is valid"

      - name: Check TypeScript config
        run: |
          cd vscode-extension
          # tsconfig.json supports comments (JSONC format), so we strip them before validating
          node -e "const fs = require('fs'); const content = fs.readFileSync('tsconfig.json', 'utf8').replace(/\/\*[\s\S]*?\*\//g, '').replace(/\/\/.*/g, ''); JSON.parse(content);"
          echo "✓ Extension tsconfig.json is valid"

      - name: Check webview TypeScript config
        run: |
          cd vscode-extension/webview
          # tsconfig.json supports comments (JSONC format), so we check if file exists and is readable
          if [ ! -f "tsconfig.json" ]; then
            echo "✗ ERROR: tsconfig.json not found"
            exit 1
          fi
          # Use Node.js to strip comments and validate JSON structure
          node -e "const fs = require('fs'); const content = fs.readFileSync('tsconfig.json', 'utf8').replace(/\/\*[\s\S]*?\*\//g, '').replace(/\/\/.*/g, ''); JSON.parse(content);"
          echo "✓ Webview tsconfig.json is valid"

  build-extension:
    name: Build VSCode Extension
    runs-on: ubuntu-latest
    needs: validate-config

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: vscode-extension/package-lock.json

      - name: Install extension dependencies
        run: |
          cd vscode-extension
          npm ci

      - name: Install webview dependencies
        run: |
          cd vscode-extension/webview
          npm ci

      - name: Build webview
        run: |
          cd vscode-extension/webview
          npm run build

      - name: Verify webview build output
        run: |
          cd vscode-extension/webview
          if [ ! -f "dist/index.js" ]; then
            echo "✗ ERROR: Webview build failed - dist/index.js not found"
            exit 1
          fi
          echo "✓ Webview built successfully"

      - name: Compile extension
        run: |
          cd vscode-extension
          npm run compile

      - name: Verify extension compilation
        run: |
          cd vscode-extension
          if [ ! -f "out/extension.js" ]; then
            echo "✗ ERROR: Extension compilation failed - out/extension.js not found"
            exit 1
          fi
          echo "✓ Extension compiled successfully"

      - name: Lint TypeScript
        run: |
          cd vscode-extension
          npm run lint || true
          echo "✓ Linting complete"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension
          path: |
            vscode-extension/out/
            vscode-extension/webview/dist/
          retention-days: 7

  test-build-script:
    name: Test Build Script
    runs-on: ubuntu-latest
    needs: build-extension

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Make build script executable
        run: chmod +x scripts/build-extension.sh

      - name: Run build script
        run: ./scripts/build-extension.sh

      - name: Verify build script output
        run: |
          if [ ! -f "vscode-extension/out/extension.js" ] || [ ! -f "vscode-extension/webview/dist/index.js" ]; then
            echo "✗ ERROR: Build script did not produce expected output"
            exit 1
          fi
          echo "✓ Build script executed successfully"
